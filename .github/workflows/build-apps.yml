name: Build Apps

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build (android/ios/both)'
        required: true
        default: 'both'
        type: choice
        options:
          - android
          - ios
          - both
      android_profile:
        description: 'Android build profile (development/preview/production)'
        required: false
        default: 'production'
        type: choice
        options:
          - development
          - preview
          - production
      ios_build_type:
        description: 'iOS build type (release/development)'
        required: false
        default: 'release'
        type: choice
        options:
          - release
          - development

jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || inputs.platform == 'android' || inputs.platform == 'both' }}
    env:
      EXPO_PUBLIC_DANDANPLAY_API_URL: ${{ secrets.EXPO_PUBLIC_DANDANPLAY_API_URL }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: bun install

      - name: Cache EAS build
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
            .expo
          key: ${{ runner.os }}-eas-android-${{ hashFiles('**/eas.json', '**/app.config.ts', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-eas-android-

      - name: Build Android
        run: eas build --local --platform android --profile ${{ inputs.android_profile || 'production' }} --non-interactive

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-release-${{ github.ref_name }}
          path: build-*.apk

  build-ios:
    name: Build iOS
    runs-on: macos-15
    if: ${{ github.event_name == 'push' || inputs.platform == 'ios' || inputs.platform == 'both' }}
    env:
      EXPO_PUBLIC_DANDANPLAY_API_URL: ${{ secrets.EXPO_PUBLIC_DANDANPLAY_API_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '26.0'

      - name: Install Xcode platforms
        run: xcodebuild -downloadPlatform iOS

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install

      - name: Cache Expo prebuild
        uses: actions/cache@v4
        with:
          path: |
            ios
            .expo
          key: ${{ runner.os }}-expo-prebuild-${{ hashFiles('**/app.config.ts', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-expo-prebuild-

      - name: Run Expo Prebuild
        run: bunx expo prebuild -p ios

      - name: Cache Xcode DerivedData
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            ios/build
          key: ${{ runner.os }}-xcode-${{ hashFiles('**/ios/**/*.pbxproj', '**/ios/**/*.xcconfig') }}
          restore-keys: |
            ${{ runner.os }}-xcode-

      - name: Build Unsigned Archive
        run: |
          xcodebuild -workspace ios/nekofin.xcworkspace \
            -scheme nekofin \
            -configuration ${{ (github.event_name == 'workflow_dispatch' && inputs.ios_build_type == 'development') && 'Debug' || 'Release' }} \
            -destination 'generic/platform=iOS' \
            -archivePath build/nekofin.xcarchive \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGN_IDENTITY="" \
            clean archive

      - name: Package ipa
        run: |
          mkdir Payload
          cp -r build/nekofin.xcarchive/Products/Applications/nekofin.app Payload
          zip -r nekofin-iOS_${{ github.ref_name }}${{ (github.event_name == 'workflow_dispatch' && inputs.ios_build_type == 'development') && '-dev' || '' }}.ipa Payload

      - name: Upload App Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-${{ (github.event_name == 'workflow_dispatch' && inputs.ios_build_type == 'development') && 'development' || 'release' }}-${{ github.ref_name }}
          path: nekofin-iOS_${{ github.ref_name }}${{ (github.event_name == 'workflow_dispatch' && inputs.ios_build_type == 'development') && '-dev' || '' }}.ipa
